{"ast":null,"code":"import axios from \"axios\";\nconst baseUrl = \"http://localhost:8089/recycler/api\";\naxios.defaults.timeout = 30000;\naxios.defaults.baseURL = baseUrl;\naxios.interceptors.request.use(config => {\n  config.data = JSON.stringify(config.data);\n  config.headers = {\n    \"Content-Type\": \"application/json\"\n  };\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\naxios.interceptors.response.use(function (response) {\n  // 2xx 范围内的状态码都会触发该函数。\n  // 对响应数据做点什么\n  return response;\n}, function (error) {\n  // 超出 2xx 范围的状态码都会触发该函数。\n  // 对响应错误做点什么\n  return Promise.reject(error);\n});\nclass httpRequest {\n  async get(url) {\n    let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return new Promise((resolve, reject) => {\n      axios.get(url, params).then(response => {\n        resolve(response.data);\n      }).catch(error => {\n        reject(error);\n      });\n    }).catch(e => {\n      return {\n        status: 0,\n        code: e.code,\n        message: e.code\n      };\n    });\n  }\n  async post(url) {\n    let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return new Promise((resolve, reject) => {\n      axios.post(url, params).then(response => {\n        console.log(response);\n        if (response.status === 200 && response.data.code === 1) {\n          resolve(response.data);\n        } else {\n          reject(response.data);\n        }\n      }).catch(error => {\n        console.log(error);\n        reject(error);\n      });\n      ;\n    });\n  }\n}\nexport default new httpRequest();","map":{"version":3,"names":["axios","baseUrl","defaults","timeout","baseURL","interceptors","request","use","config","data","JSON","stringify","headers","error","Promise","reject","response","httpRequest","get","url","params","resolve","then","catch","e","status","code","message","post","console","log"],"sources":["D:/project/recycler/recycler-ui/src/js/request.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseUrl = \"http://localhost:8089/recycler/api\";\r\naxios.defaults.timeout = 30000;\r\naxios.defaults.baseURL = baseUrl;\r\n\r\naxios.interceptors.request.use(\r\n    (config) => {\r\n      config.data = JSON.stringify(config.data);\r\n      config.headers = {\r\n        \"Content-Type\": \"application/json\",\r\n      };\r\n      return config;\r\n    },\r\n    (error) => {\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n  axios.interceptors.response.use(function (response) {\r\n    // 2xx 范围内的状态码都会触发该函数。\r\n    // 对响应数据做点什么\r\n    return response;\r\n  }, function (error) {\r\n    // 超出 2xx 范围的状态码都会触发该函数。\r\n    // 对响应错误做点什么\r\n    return Promise.reject(error);\r\n  });\r\nclass httpRequest{\r\n    async get(url, params = {}) {\r\n        return new Promise((resolve, reject) => {\r\n          axios.get(url, params)\r\n          .then((response) => {\r\n              resolve(response.data);\r\n            })\r\n            .catch((error) => {\r\n              reject(error);\r\n            });\r\n        }).catch((e)=>{\r\n          return {\r\n            status:0,\r\n            code:e.code,\r\n            message:e.code\r\n          };\r\n        });\r\n      }\r\n      async post(url, params = {}) {\r\n        return new Promise((resolve, reject) => {\r\n          axios.post(url, params)\r\n          .then((response) => {\r\n            console.log(response);\r\n            if(response.status === 200 && response.data.code === 1){\r\n              resolve(response.data);\r\n            }else{\r\n              reject(response.data);\r\n            }\r\n          }\r\n          ).catch((error) => {\r\n            console.log(error)\r\n            reject(error);\r\n          });;\r\n        });\r\n      }\r\n}\r\nexport default new httpRequest();"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,oCAAoC;AACpDD,KAAK,CAACE,QAAQ,CAACC,OAAO,GAAG,KAAK;AAC9BH,KAAK,CAACE,QAAQ,CAACE,OAAO,GAAGH,OAAO;AAEhCD,KAAK,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACVA,MAAM,CAACC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACH,MAAM,CAACC,IAAI,CAAC;EACzCD,MAAM,CAACI,OAAO,GAAG;IACf,cAAc,EAAE;EAClB,CAAC;EACD,OAAOJ,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CACF;AACDb,KAAK,CAACK,YAAY,CAACW,QAAQ,CAACT,GAAG,CAAC,UAAUS,QAAQ,EAAE;EAClD;EACA;EACA,OAAOA,QAAQ;AACjB,CAAC,EAAE,UAAUH,KAAK,EAAE;EAClB;EACA;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CAAC;AACJ,MAAMI,WAAW;EACb,MAAMC,GAAG,CAACC,GAAG,EAAe;IAAA,IAAbC,MAAM,uEAAG,CAAC,CAAC;IACtB,OAAO,IAAIN,OAAO,CAAC,CAACO,OAAO,EAAEN,MAAM,KAAK;MACtCf,KAAK,CAACkB,GAAG,CAACC,GAAG,EAAEC,MAAM,CAAC,CACrBE,IAAI,CAAEN,QAAQ,IAAK;QAChBK,OAAO,CAACL,QAAQ,CAACP,IAAI,CAAC;MACxB,CAAC,CAAC,CACDc,KAAK,CAAEV,KAAK,IAAK;QAChBE,MAAM,CAACF,KAAK,CAAC;MACf,CAAC,CAAC;IACN,CAAC,CAAC,CAACU,KAAK,CAAEC,CAAC,IAAG;MACZ,OAAO;QACLC,MAAM,EAAC,CAAC;QACRC,IAAI,EAACF,CAAC,CAACE,IAAI;QACXC,OAAO,EAACH,CAAC,CAACE;MACZ,CAAC;IACH,CAAC,CAAC;EACJ;EACA,MAAME,IAAI,CAACT,GAAG,EAAe;IAAA,IAAbC,MAAM,uEAAG,CAAC,CAAC;IACzB,OAAO,IAAIN,OAAO,CAAC,CAACO,OAAO,EAAEN,MAAM,KAAK;MACtCf,KAAK,CAAC4B,IAAI,CAACT,GAAG,EAAEC,MAAM,CAAC,CACtBE,IAAI,CAAEN,QAAQ,IAAK;QAClBa,OAAO,CAACC,GAAG,CAACd,QAAQ,CAAC;QACrB,IAAGA,QAAQ,CAACS,MAAM,KAAK,GAAG,IAAIT,QAAQ,CAACP,IAAI,CAACiB,IAAI,KAAK,CAAC,EAAC;UACrDL,OAAO,CAACL,QAAQ,CAACP,IAAI,CAAC;QACxB,CAAC,MAAI;UACHM,MAAM,CAACC,QAAQ,CAACP,IAAI,CAAC;QACvB;MACF,CAAC,CACA,CAACc,KAAK,CAAEV,KAAK,IAAK;QACjBgB,OAAO,CAACC,GAAG,CAACjB,KAAK,CAAC;QAClBE,MAAM,CAACF,KAAK,CAAC;MACf,CAAC,CAAC;MAAC;IACL,CAAC,CAAC;EACJ;AACN;AACA,eAAe,IAAII,WAAW,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}